<%= form_for user, :html => {:autocomplete => 'off'} do |f| %>
  <%
    input_purchase_code = "<input id=\"registration_purchase_id\" class=\"text fltlft\" type=\"text\" value=\"\" name=\"purchase_id\">".html_safe
    input_trial_checkbox = "<input id=\"registration_trial\" class=\"regcular-checkbox\" type=\"checkbox\" value=\"0\" name=\"trial\">".html_safe
    if trial
      input_purchase_code = "<input id=\"registration_purchase_id\" class=\"text disabled fltlft\" type=\"text\" value=\"\" name=\"purchase_id\" disabled=\"disabled\">".html_safe
      input_trial_checkbox = "<input id=\"registration_trial\" class=\"regcular-checkbox checked\" type=\"checkbox\" value=\"1\" name=\"trial\" checked=\"checked\">".html_safe
    end
  %>
  <% if SETTINGS['saas_registration_mode'] %>
    <fieldset class="insert-contsent formCodAcquisto">
      <%= t('registration.purchase_id') %><br/>
      <%= input_purchase_code %> <div class="validationOk fltlft" style="display:none" id="registration_ok">&#10004;</div>
      <br class="clearfloat"/>
      <%= t('registration.trial', :days => SETTINGS['saas_trial_duration']) %><br>
      <%= input_trial_checkbox %>
      <%= label_tag 'registration_trial', '' %>
    </fieldset>
    <% if errors && errors.has_key?(:purchase_id) %>
      <ul class="profile-errors">
        <li><%= errors[:purchase_id] %></li>
      </ul>
    <% end %>
  <% end %>
  <%
    locals_for_general_info = {
      :f => f,
      :edit => false,
      :user => user,
      :general_errors => (errors.nil? ? [] : errors[:general]),
      :location_errors => (errors.nil? ? [] : errors[:location]),
      :locations => locations,
      :school_level_ids => school_level_ids,
      :forced_location => forced_location
    }
  %>
  
  
  <fieldset class="insert-contsent">
  
  <div class="inputElement">
    <%= t('users.info.attributes.name') %><br>
    <%= f.text_field :name, class: 'text' %>
  </div>
  
  <div class="inputElement">
    <%= t('users.info.attributes.surname') %><br>
    <%= f.text_field :surname, class: 'text' %>
  </div>
  
  <div class="inputElement">
    <%= t('users.info.attributes.email') %><br>
    <%= f.email_field :email, class: 'text', disabled: !user.new_record? %>
  </div>
  
  <br class="clearfloat"/>
  
  <div class="inputElement">
    <% if user.new_record? %>
      <%= t('users.info.attributes.password') %>
    <% else %>
      <%= t('users.info.attributes.new_password') %>
    <% end %>
    <br/>
    <%= f.password_field :password, class: 'text' %>
  </div>
  
  <div class="inputElement" style="margin-right:0">
    <% if user.new_record? %>
      <%= t('users.info.attributes.password_confirmation') %>
    <% else %>
      <%= t('users.info.attributes.new_password_confirmation') %>
    <% end %>
    <br>
    <%= f.password_field :password_confirmation, class: 'text' %>
  </div>
  
  <br class="clearfloat"/>
  
  <ul class="profile-errors">
    <% general_errors.each do |err| %>
      <li><%= err %></li>
    <% end %>
  </ul>
  
</fieldset>


<hr>


<fieldset id="location_container_in_personal_info" class="insesrt-content">
  
  
  <%
  disabling = !forced_location.nil?
  forced_ancestors = (forced_location.ancestors + [forced_location]) if disabling
%>
<% SETTINGS['location_types'].each_with_index do |location, index| %> <!-- TODO forrm pensaci tu --- devo sistemare il nuovo parziale locations_list -->
  <%
    is_last = (index == SETTINGS['location_types'].length - 1)
    my_own_locations = locations[index].nil? ? {:selected => 0, :content => []} : locations[index]
  %>
  <div class="inputElement">
    <div class="TODO"> <!-- TODO forrm aggiornare il nome della classe (mettici profile-element) -->
      <%= Location.label_at(index) %><br>
      <% if disabling %>
        <div class="profile-location-deselected" id="<%= location.downcase %>_id"><%= forced_ancestors[index].name %></div>
      <% else %>
        <select id="<%= location.downcase %>_id" class="_location_select_box" data-is-last="<%= is_last %>" name="location[<%= location.downcase %>]">
          <%= render :partial => 'users/locations_list', :locals => {:locations => my_own_locations[:content], :selected => my_own_locations[:selected], :label => (my_own_locations[:content].any? ? Location.label_at(index) : nil)} %>
        </select>
      <% end %>
    </div>
  </div>
  <% disabling = false if disabling && forced_location.sti_type == location %>
<% end %>

<% if forced_location && forced_location.sti_type == SETTINGS['location_types'].last %>
  <input id="user_location_id" type="hidden" value="<%= forced_location.id %>" name="user[location_id]">
<% end %>
  
  
</fieldset>

<% if SETTINGS['saas_registration_mode'] && !edit %>
  <div id="outer_locations_disclaimer">
    <input id="locations_disclaimer" class="regcular-checkbox" type="checkbox" value="0">
    <%= label_tag 'locations_disclaimer', '' %>
    <%= t('registration.locations_disclaimer', :location => Location.base_label.downcase) %>
  </div>
<% end %>

<br/><br/><br/>

<hr>


<fieldset class="insert-contesnt">
  
  <div class="inputElement">
    <%= t('users.info.attributes.school_level_id') %><br>
    <%= f.select :school_level_id, school_level_ids %>
  </div>
  <br class="clearfloat">
  
</fieldset>

<br/><br/>

<hr>
  
  
  <h2><%= t('registration.subjects.title') %></h2>
  
  
  
  <%
          my_style = ''
          other_label = t('users.subjects.no_cathegory')
          my_style = 'border-bottom:0' if @subjects.length == 1
          other_label = '' if @subjects.first[:label].blank?
        %>
        <fieldset class="inssert-content">
          <%= hidden_field_tag :in_subjects, true %>
          <% @subjects.each do |cathegory| %>
            <div class="cathegorySubjectContainer" style="<%= my_style %>">
              <div class="cathegorySubjectName">
                <%= cathegory[:label].present? ? cathegory[:label] : other_label %>
              </div>
              <% cathegory[:items].each do |subject| %>
                <% html_id = "users_subject_ids_#{subject.id}" %>
                <div class="checkboxElement">
                  <%= check_box_tag 'user[subject_ids][]', subject.id, @user.users_subjects.map(&:subject_id).include?(subject.id), id: html_id, class: 'regcular-checkbox bicg-checkbox' %>
                  <%= label_tag html_id, '', :class => 'unchecked' %>
                  <span><%= subject.to_s %></span>
                </div>
              <% end %>
              <br class="clearfloat">
              <% if !edit && cathegory[:label].present? %>
                <a class="checkAllSubjects"><%= t('registration.select_all_subjects') %></a>
              <% end %>
            </div>
  
  
  
  <hr>
  <div class="contentForm">
    <% user.registration_policies.each_with_index do |policy, index| %>
      <% my_policy = t('registration.policies')[index] %>
      <strong><%= my_policy['title'] %></strong><br><br>
      <div class="policy-verticalScroll">
        <%= my_policy['description'].html_safe %>
      </div>
      <div class="checkbox-csssontent"> <!-- TODO forrm pensaci tu -->
        <div class="checkboxElement">
          <table>
            <tr>
              <td>
                <%= f.hidden_field policy, value: '0', id: nil %>
                <%= check_box_tag "user[#{policy}]", '1', user.send(policy) == '1', class: 'regcular-checkbox' %>
                <%= label_tag "user[#{policy}]", '' %>
              </td>
              <td><%= my_policy['accept'] %></td>
            </tr>
          </table>
        </div>
      </div>
      <br class="clearfloat"><br><br>
    <% end %>
    <ul class="profile-errors">
      <% (errors.nil? ? [] : errors[:policies]).each do |err| %>
        <li><%= err %></li>
      <% end %>
    </ul>
    <%= f.submit t('registration.done') %>
  </div>
<% end %>
