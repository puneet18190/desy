<%
  disabling = !forced_location.nil?
  forced_ancestors = (forced_location.ancestors + [forced_location]) if disabling
%>
<% SETTINGS['location_types'].each_with_index do |location, index| %>
  <%
    is_last = (index == SETTINGS['location_types'].length - 1)
    my_own_locations = locations[index].nil? ? {:selected => 0, :content => []} : locations[index]
  %>
  <div class="inputElement">
    <div class="_location_selector">
      <%= Location.label_at(index) %><br>
      <% if disabling %>
        <div class="sbHolderDeselect" id="<%= location.downcase %>_id"><%= forced_ancestors[index].name %></div>
      <% else %>
        <select id="<%= location.downcase %>_id" class="_location_select_box" data-is-last="<%= is_last %>" name="location[<%= location.downcase %>]">
          <%= render :partial => 'users/locations_list', :locals => {:locations => my_own_locations[:content], :selected => my_own_locations[:selected], :edit => edit} %>
        </select>
      <% end %>
    </div>
  </div>
  <% disabling = false if disabling && forced_location.sti_type == location %>
<% end %>

<% if forced_location && forced_location.sti_type == SETTINGS['location_types'].last %>
  <input id="user_location_id" type="hidden" value="<%= forced_location.id %>" name="user[location_id]">
<% end %>
