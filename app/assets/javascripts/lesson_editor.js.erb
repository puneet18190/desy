$(document).ready(function() {
  initTinymce(); // init tinymce configuration and manage external toolbar toggle
  slideSortList("#slide-numbers"); // make sortable page number on top
  $("#lesson_subject").selectbox(); // select subject in lesson new/edit views
  initLessonEditorPositions(); // center and align slides offset
  lessonEditorTooltip('#slide-numbers li'); // show tooltip on top list mouseover
  scrollSlideTo('#slide-numbers li a:not(._add_slide)'); // scroll to slide N on top list click
  
  // apply mask to each horizontal slide image container
  masked = $("._mask_x a:not('._choose')");
  masked.each(function(index) {
    makeDraggable($(masked[index]), "x");
  });
  
  // apply mask to each vertical slide image container
  maskedY = $("._mask_y a:not('._choose')");
  maskedY.each(function(index) {
    makeDraggable($(maskedY[index]), "y");
  });
  
  // trigger save on "save button" click
  $('body').on('click', '._save_slide', function(e) {
    e.preventDefault();
    tinyMCE.triggerSave();
    var formId = $(this).attr("data-param");
    $('form#'+formId).submit();
  });
  
  $('body').on('click', '._add_new_slide_options', function() {
    var slideN = $("li.slides.active .slide-content");
    slideN.removeClass("cover title video1 video2 audio image1 image2 image3 image4 text");
    var html_to_be_replaced = $('#new_slide_option_list').html();
    slideN.prepend(html_to_be_replaced);
    slideN.siblings(".buttons").find(".add").addClass("active");
  });
  
  $('body').on('click', '._add_new_slide', function() {
    var kind = $(this).data('kind');
    var lesson_id = $('#info_container').data('lesson-id');
    var slide_id = $('#info_container').data('slide-id');
    $.ajax({
      type: 'post',
      url: '/lessons/' + lesson_id + '/slides/' + slide_id + '/kind/' + kind + '/create/'
    });
  });
  
});

function updateInfoCurrentSlide(slide_id) {
  $('#info_container').data('slide-id', slide_id);
}

/** functions to use in document.ready **/
function makeDraggable(masked, axe){
//if horizontal
maskedImgWidth = masked.find("img").attr("width");
var dist = maskedImgWidth - masked.parent().width();

console.log("maskedImgWidth: "+ maskedImgWidth);
console.log("parent.width: "+ masked.parent().width());
console.log(dist);

//if vertical
maskedImgHeight = masked.find("img").attr("height");
var vDist = maskedImgHeight - masked.parent().height();

console.log("if height");
console.log("maskedImgWidth: "+ maskedImgWidth);
console.log("parent.width: "+ masked.parent().width());
console.log(dist);

var roll = masked.find(".rollover");
var side = "";
if(axe == "x"){
  side = "left";
}else{
  side = "top";
  dist = vDist;
}
masked.draggable({ 
  axis: axe, 
  distance: 10,
  start: function(){
    roll.css("opacity","0");
    roll.css("cursor","-webkit-grabbing");
  },
  //drag: function(){
  //  var thisDrag = $(this);
  //  var offset = thisDrag.css("left");
  //  if (parseInt(offset) > 0){
  //    thisDrag.draggable('disable');
  //  }
  //},
  stop: function() {
    var thisDrag = $(this);
    var offset = thisDrag.css(side);
    console.log("offset: "+offset);
    if (parseInt(offset) > 0){
      offset = 0;
      roll.css(side,0);
      if(side=="left"){
        thisDrag.animate({
            left: "0"
          }, 100 );
      }else{
        thisDrag.animate({
            top: "0"
          }, 100 );
      }
    }
    else if (parseInt(offset) < -(parseInt(dist))){
      offset = -parseInt(dist);
      console.log("offset: "+offset+"dist: "+dist+"side: "+side+roll.css(side));
      roll.css(side,-offset);
      console.log("offset: "+offset+"dist: "+dist+"side: "+side+roll.css(side));
      if(side=="left"){
        thisDrag.animate({
            left: "-"+dist+"px"
          }, 100 );
      }else{
        thisDrag.animate({
            top: "-"+dist+"px"
          }, 100 );
      }
    }
    roll.css(side,-parseInt(offset)).css("opacity","0.5");
    roll.css("cursor","-webkit-grab");
    masked.parent().siblings(".media_element_align_"+masked.attr("data-param")).val(parseInt(offset));
  }
});
}

function scrollSlideTo(list){
  $(list).click(function(e){
    e.preventDefault();
    
    tinyMCE.triggerSave();
    $('.active form').submit();
    
    slideTo(this);
  });
}

function slideTo(nth){
  page = $(nth).text();
  slide_id = $(nth).attr("data-slide");
  if (parseInt(page) == 1){
    marginReset = 0
  }else{
    marginReset = parseInt(-((page-1)*1010))+"px"
  }
  $("ul#slides").animate({
    marginLeft: marginReset
  }, 1500 );
  $("ul#slides li").animate({
    opacity: 0.4,
  }, 150, function() {
    $(this).find(".buttons").fadeOut();
    $(this).removeClass("active");
  });
  $("ul#slides li:nth-child("+page+")").animate({
    opacity: 1,
  }, 500, function(){
    $(this).find(".buttons").fadeIn();
    $(this).addClass("active");
  });
  $("#slide-numbers li a.active").removeClass("active");
  $(nth).addClass("active");
  
  updateInfoCurrentSlide(slide_id);
  
}

function lessonEditorTooltip(list){
  $(list).hover(function(e) {
    tip = $(this); 
    // Calculate the position of the image tooltip
    x = e.pageX - tip.offset().left;
    y = e.pageY - tip.offset().top;

    tip.children('.slide-tooltip').animate({"opacity": "show"}, "fast");     
  }, function() {
    // Reset the z-index and hide the image tooltip 
    $(this).children('.slide-tooltip').animate({"opacity": "hide"}, "fast");
  });
}

function initLessonEditorPositions(){
  WW = parseInt($(window).outerWidth());
  WH = parseInt($(window).outerHeight());
  $("#main").css("width", WW);
  $("ul#slides").css("width",($("ul#slides li").length * 960) + (2*WW) );
  $("ul#slides").css("top", ((WH / 2) - 295) + "px");
  $("ul#slides.new").css("top", ((WH / 2) - 335) + "px")
  $("#footer").css("top",(WH-40)+"px").css("width",(WW-24)+"px")
  if(WW > 1000){
    $("ul#slides li:first").css("margin-left", ((WW-900) / 2) + "px")
    $("ul#slides.new li:first").css("margin-left",((WW-900) / 2) + "px");
  }
}

function slideSortList(list){
  $(list).sortable({
      items: "li:not(.unsortable)",
      axis: 'x',
      start: function(event, ui) {
        ui.item.startPos = ui.item.index() + 1;
        tinyMCE.triggerSave();
        $('.active form').submit();
      },
      stop: function(event, ui) {
        ui.item.endPos = ui.item.index() + 1;
        current_a = ui.item.find("a")
        current_a.text((parseInt(ui.item.index()) + 1));
        $.post('/lessons/' + $('#info_container').data('lesson-id') + '/slides/' + current_a.attr("data-slide") + '/move/' + ui.item.endPos);
        $(this).find('li:not(:last)').each(function(i){
          var current_i = (parseInt(i)+1);
          $(this).find('a').text(current_i);
        });
        scrollTo('.slide-numbers li:eq('+ui.item.endPos+')');
      }
  });
}

function tinyMceCallbacks(inst){
  console.log(inst.getBody().scrollHeight);
  if (inst.getBody().scrollHeight > 417){
    $(inst.getBody()).parentsUntil("table.mceLayout").css("border","1px solid red");
  }
  else
  {
    $(inst.getBody()).parentsUntil("table.mceLayout").css("border","1px solid white");
  }
}

function initTinymce(){
  tinyMCE.init({
    mode : "textareas",
    theme : "advanced",
    editor_selector : "tinymce",
    skin : "desy",
    content_css : "/assets/tiny_mce_desy.css",
    plugins : "equation,fmath_formula,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,insertdatetime,preview,media,searchreplace,print,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",
    theme_advanced_buttons1 : "fontsizeselect,forecolor,justifyleft,justifycenter,justifyright,justifyfull,bold,italic,underline,numlist,bullist,link,unlink,fmath_formula,equation",
    theme_advanced_toolbar_location : "external",
    theme_advanced_toolbar_align : "left",
    theme_advanced_statusbar_location : false,
    theme_advanced_resizing : true,
    theme_advanced_font_sizes : "1em=.size1,2em=.size2,3em=.size3,4em=.size4,5em=.size5,6em=.size6,7em=.size7",
    setup : function(ed) {
      ed.onKeyUp.add(function(ed, e) {
        tinyMceCallbacks(ed);
      });
   }
  });
  
  $('body:not(textarea.tinymce)').click(function(e){
    //console.log($(e.target).parentsUntil(".mceExternalToolbar"));
    //$(e.target).parentsUntil(".mceExternalToolbar").fadeOut();
    $('.mceExternalToolbar').hide();
  });
  
  $('textarea.tinymce').click(function(){
    $('.mceExternalToolbar').show();
  });
  
}

function imgRealSize(img) {
	var $img = $(img);
	if ($img.prop('naturalWidth') == undefined) {
		var $tmpImg = $('<img/>').attr('src', $img.attr('src'));
		$img.prop('naturalWidth', $tmpImg[0].width);
		$img.prop('naturalHeight', $tmpImg[0].height);
	}
	return { 'width': $img.prop('naturalWidth'), 'height': $img.prop('naturalHeight') }
}

function centerThis(div) { 
        var winH = $(window).height(); 
        var winW = $(window).width(); 
        var centerDiv = $(div); 
        centerDiv.css('top', winH/2-centerDiv.height()/2); 
        centerDiv.css('left', winW/2-centerDiv.width()/2); 
}

function isHorizontalMask(image_width,image_height,kind){
  var ratio = image_width/image_height;
  var slideRatio = 0;
  switch(kind)
  {
    case "cover": slideRatio = 1.6;
    break;
    case "image1": slideRatio = 1.05;
    break;
    case "image2": slideRatio = 0.75;
    break;
    case "image3": slideRatio = 1.55;
    break;
    case "image4": slideRatio = 1.55;
    break;
    default: slideRatio = 1.5;
  }
  return (ratio >= slideRatio);
}


function resizeWidth(width,height,kind){
  switch(kind)
  {
     case "cover": slideHeight = 560;
     break;
     case "image1": slideHeight = 420;
     break;
     case "image2": slideHeight = 550;
     break;
     case "image3": slideHeight = 550;
     break;
     case "image4": slideHeight = 265;
     break;
     default: slideHeight = 590;
  }
  return (width*slideHeight)/height;
}
  
function resizeHeight(width,height,kind){
  switch(kind)
  {
     case "cover": slideWidth = 900;
     break;
     case "image1": slideWidth = 440;
     break;
     case "image2": slideWidth = 420;
     break;
     case "image3": slideWidth = 860;
     break;
     case "image4": slideWidth = 420;
     break;
     default: slideWidth = 900;
  }
  return (height*slideWidth)/width;
}